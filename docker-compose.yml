version: '3.8'

services:
  db:
    image: mysql:8.0
    command: ["--default-authentication-plugin=mysql_native_password"]
    container_name: db
    environment: #hardcoded credentials just for the challenge. In real-case scenario set ENV VARS in .env
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpass}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-cars}
      MYSQL_USER: ${MYSQL_USER:-car_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-car_pass}
    ports:
      - "3306:3306"
    volumes:
      - ./app/sql:/docker-entrypoint-initdb.d
      - mysql_data:/var/lib/mysql
    restart: always
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-prootpass"]
      interval: 5s
      timeout: 10s
      retries: 30

  app:
    build: .
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_HOST: db
      DB_PORT: 3306
      DB_NAME: cars
      DB_USER: car_user
      DB_PASS: car_pass
    command: python3 -m app.services.seed_db

  dev:
    build: .
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_HOST: db
      DB_PORT: 3306
      DB_NAME: cars
      DB_USER: car_user
      DB_PASS: car_pass
    volumes:
      - .:/app
    working_dir: /app
    command: tail -f /dev/null

volumes:
  mysql_data:
